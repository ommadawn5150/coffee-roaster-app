"use strict";const r=require("electron"),l=require("serialport"),c=require("@serialport/parser-readline"),a={};let e,t,s;function i(){e=new r.BrowserWindow({width:1200,height:800,webPreferences:{preload:a.join(__dirname,"preload.js")}}),r.app.isPackaged?e.loadFile(a.join(__dirname,"../dist/index.html")):(e.loadURL("http://localhost:5173"),e.webContents.openDevTools())}r.app.whenReady().then(()=>{i(),r.app.on("activate",()=>{r.BrowserWindow.getAllWindows().length===0&&i()})});r.app.on("window-all-closed",()=>{process.platform!=="darwin"&&r.app.quit()});r.ipcMain.handle("get-ports",async()=>await l.SerialPort.list());r.ipcMain.on("connect-port",(d,o)=>{t&&t.isOpen&&t.close(),t=new l.SerialPort({path:o,baudRate:9600});const p=t.pipe(new c.ReadlineParser({delimiter:`\r
`}));t.on("open",()=>{e==null||e.webContents.send("port-status",{status:"connected",path:o}),s&&clearInterval(s),s=setInterval(()=>{t&&t.isOpen&&t.write(`t
`)},1e3)}),p.on("data",n=>{e==null||e.webContents.send("temperature-update",parseFloat(n))}),t.on("error",n=>{e==null||e.webContents.send("port-status",{status:"error",message:n.message})}),t.on("close",()=>{s&&clearInterval(s),e==null||e.webContents.send("port-status",{status:"disconnected"})})});r.ipcMain.on("disconnect-port",()=>{t&&t.isOpen&&t.close()});
